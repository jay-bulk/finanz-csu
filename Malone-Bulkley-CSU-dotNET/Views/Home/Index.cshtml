@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

@model IEnumerable<Budget.Models.Budget>

@{
    ViewData["Title"] = "Finanz CSU - Adjust your Budget";
}

<form asp-action="FilterView" method="get">
    <div class="form-actions no-color">
        <p>
            Filter Budget For Category Name: <input maxlength="20" type="text" name="searchName" value="@ViewData["CategoryFilter"]" />
            <input type="submit" value="Search" class="btn btn-primary" />
            <a asp-action="FilterView" class="btn btn-link">Monthly Budget</a>
        </p>
    </div>
</form>
<table class="tabbedTable">
    <thead>
        <tr>
            <th style="width:30%" data-tabbedTable="January">Category Name</th>
            <th style="width:10%" data-tabbedTable="January">Actual Months Expenses</th>
            <th style="width:10%" data-tabbedTable="January">Budgeted Month Expenses</th>
            <th style="width:10%" data-tabbedTable="January">Difference</th>
            <th style="width:30%" data-tabbedTable="February">Category Name</th>
            <th style="width:10%" data-tabbedTable="February">Actual Months Expenses</th>
            <th style="width:10%" data-tabbedTable="February">Budgeted Month Expenses</th>
            <th style="width:10%" data-tabbedTable="February">Difference</th>
            <th style="width:30%" data-tabbedTable="March">Category Name</th>
            <th style="width:10%" data-tabbedTable="March">Actual Months Expenses</th>
            <th style="width:10%" data-tabbedTable="March">Budgeted Month Expenses</th>
            <th style="width:10%" data-tabbedTable="March">Difference</th>
            <th style="width:30%" data-tabbedTable="April">Category Name</th>
            <th style="width:10%" data-tabbedTable="April">Actual Months Expenses</th>
            <th style="width:10%" data-tabbedTable="April">Budgeted Month Expenses</th>
            <th style="width:10%" data-tabbedTable="April">Difference</th>
            <th style="width:30%" data-tabbedTable="May">Category Name</th>
            <th style="width:10%" data-tabbedTable="May">Actual Months Expenses</th>
            <th style="width:10%" data-tabbedTable="May">Budgeted Month Expenses</th>
            <th style="width:10%" data-tabbedTable="May">Difference</th>
            <th style="width:30%" data-tabbedTable="June">Category Name</th>
            <th style="width:10%" data-tabbedTable="June">Actual Months Expenses</th>
            <th style="width:10%" data-tabbedTable="June">Budgeted Month Expenses</th>
            <th style="width:10%" data-tabbedTable="June">Difference</th>
            <th style="width:30%" data-tabbedTable="July">Category Name</th>
            <th style="width:10%" data-tabbedTable="July">Actual Months Expenses</th>
            <th style="width:10%" data-tabbedTable="July">Budgeted Month Expenses</th>
            <th style="width:10%" data-tabbedTable="July">Difference</th>
            <th style="width:30%" data-tabbedTable="August">Category Name</th>
            <th style="width:10%" data-tabbedTable="August">Actual Months Expenses</th>
            <th style="width:10%" data-tabbedTable="August">Budgeted Month Expenses</th>
            <th style="width:10%" data-tabbedTable="August">Difference</th>
            <th style="width:30%" data-tabbedTable="September">Category Name</th>
            <th style="width:10%" data-tabbedTable="September">Actual Months Expenses</th>
            <th style="width:10%" data-tabbedTable="September">Budgeted Month Expenses</th>
            <th style="width:10%" data-tabbedTable="September">Difference</th>
            <th style="width:30%" data-tabbedTable="October">Category Name</th>
            <th style="width:10%" data-tabbedTable="October">Actual Months Expenses</th>
            <th style="width:10%" data-tabbedTable="October">Budgeted Month Expenses</th>
            <th style="width:10%" data-tabbedTable="October">Difference</th>
            <th style="width:30%" data-tabbedTable="November">Category Name</th>
            <th style="width:10%" data-tabbedTable="November">Actual Months Expenses</th>
            <th style="width:10%" data-tabbedTable="November">Budgeted Month Expenses</th>
            <th style="width:10%" data-tabbedTable="November">Difference</th>
            <th style="width:30%" data-tabbedTable="December">Category Name</th>
            <th style="width:10%" data-tabbedTable="December">Actual Months Expenses</th>
            <th style="width:10%" data-tabbedTable="December">Budgeted Month Expenses</th>
            <th style="width:10%" data-tabbedTable="December">Difference</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var p in Model)
        {
            <tr>
                <td>@p.CategoryName</td>
                <td style="text-align:right">@p.ActualMonthExpenses.ToString("c2")</td>
                <td style="text-align:right">@p.BudgetedMonthExpenses.ToString("c2")</td>
                <td style="text-align:right">@p.MonthDifference.ToString("c2")</td>
            </tr>
        }
    </tbody>
</table>
<script>
    (function ($) {
        $.fn.tabbedTable = function () {
            this.filter("table").each(function () {
                var tabs = [];
                var table = $(this);
                var randomId = 'tabbedTable-' + Math.floor((Math.random() * 100000) + 1);

                // wrap our table
                table.wrap('<div class="tabbedTable-wrapper">');

                // add an id
                table.addClass(randomId);

                // add a style tag to store visible / invisible columns
                $('body').append('<style class="' + randomId + '-style"></style>');

                var wrapper = table.parent('.tabbedTable-wrapper');

                // Find table headers to hide
                $('th', table).each(function (i) {
                    var tabName = $(this).attr('data-tabbedTable');
                    if (tabName !== undefined) {
                        var columnNumber = i + 1;
                        // hide the columns
                        // $('th:nth-child('+ columnNumber +'), td:nth-child('+ columnNumber +')', table).hide();

                        // add the tabname to
                        if (tabs.indexOf(tabName) == -1) {
                            tabs.push(tabName);
                        }
                    }
                });

                // add buttons
                var buttons = '';
                for (t = 0; t < tabs.length; t++) {
                    buttons += '<label class="tabbedTable-label">' + tabs[t] + '</label>';
                }
                wrapper.prepend('<div class="tabbedTable-labels">' + buttons + '</div>');

                // click events
                $('.tabbedTable-label', wrapper).on('click', function () {
                    $('.tabbedTable-label', wrapper).removeClass('tabbedTable-label--active');
                    $(this).addClass('tabbedTable-label--active');
                    var tabSelected = $(this).text();
                    var styleContent = '';
                    $('th', table).each(function (i) {
                        if ($(this).attr('data-tabbedTable') !== undefined) {
                            // header index
                            var columnNumber = i + 1;

                            if (tabSelected == $(this).attr('data-tabbedTable')) {
                                // show columns
                                // $('th:nth-child('+ columnNumber +'), td:nth-child('+ columnNumber +')', table).show();
                                styleContent += '.' + randomId + ' th:nth-child(' + columnNumber + ') { display: table-cell; } ';
                                styleContent += '.' + randomId + ' td:nth-child(' + columnNumber + ') { display: table-cell; } ';
                            }
                            else {
                                // show columns
                                // $('th:nth-child('+ columnNumber +'), td:nth-child('+ columnNumber +')', table).hide();
                                styleContent += '.' + randomId + ' th:nth-child(' + columnNumber + ') { display: none; } ';
                                styleContent += '.' + randomId + ' td:nth-child(' + columnNumber + ') { display: none; } ';
                            }
                        }
                    });

                    //var styleContent = '.'+ randomId +' td:nth-child(2) { background: red; }';

                    // update <style> tag
                    $('.' + randomId + '-style').html(styleContent);
                });

                // click first
                $('.tabbedTable-labels label:first', wrapper).click();
            });
            return this;
        };
    }(jQuery));

    // Usage example:
    $(".tabbedTable").tabbedTable();
</script>

